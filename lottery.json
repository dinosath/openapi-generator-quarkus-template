{
    "openapi": "3.0.2",
    "info": {
        "title": "lottery",
        "version": "1.0.0"
    },
    "paths": {
        "/users": {
            "summary": "Path used to manage the list of users.",
            "description": "The REST endpoint/path used to list and create zero or more `User` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `User` entities."
                    }
                },
                "operationId": "getUsers",
                "summary": "List All Users",
                "description": "Gets a list of all `User` entities.",
                "x-http-method-lowercase":"get"
            },
            "post": {
                "requestBody": {
                    "description": "A new `User` to be created.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful response."
                    }
                },
                "operationId": "createUser",
                "summary": "Create a User",
                "description": "Creates a new instance of a `User`.",
                "x-http-method-lowercase":"post"
            }
        },
        "/users/{userId}": {
            "summary": "Path used to manage a single User.",
            "description": "The REST endpoint/path used to get, update, and delete single instances of an `User`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": "Successful response - returns a single `User`."
                    }
                },
                "operationId": "getUser",
                "summary": "Get a User",
                "description": "Gets the details of a single instance of a `User`.",
                "x-http-method-lowercase":"get"
            },
            "put": {
                "requestBody": {
                    "description": "Updated `User` information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful response."
                    }
                },
                "operationId": "updateUser",
                "summary": "Update a User",
                "description": "Updates an existing `User`.",
                "x-http-method-lowercase":"put"
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Successful response."
                    }
                },
                "operationId": "deleteUser",
                "summary": "Delete a User",
                "description": "Deletes an existing `User`.",
                "x-http-method-lowercase":"delete"
            },
            "parameters": [
                {
                    "name": "userId",
                    "description": "A unique identifier for a `User`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/lotteries": {
            "summary": "Path used to manage the list of lotteries.",
            "description": "The REST endpoint/path used to list and create zero or more `Lottery` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Lottery"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `Lottery` entities."
                    }
                },
                "operationId": "getLotteries",
                "summary": "List All Lotteries",
                "description": "Gets a list of all `Lottery` entities.",
                "x-http-method-lowercase":"get"
            },
            "post": {
                "requestBody": {
                    "description": "A new `Lottery` to be created.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Lottery"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful response."
                    }
                },
                "operationId": "createLottery",
                "summary": "Create a Lottery",
                "description": "Creates a new instance of a `Lottery`.",
                "x-http-method-lowercase":"post"
            }
        },
        "/lotteries/{lotteryId}": {
            "summary": "Path used to manage a single Lottery.",
            "description": "The REST endpoint/path used to get, update, and delete single instances of an `Lottery`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Lottery"
                                }
                            }
                        },
                        "description": "Successful response - returns a single `Lottery`."
                    }
                },
                "operationId": "getLottery",
                "summary": "Get a Lottery",
                "description": "Gets the details of a single instance of a `Lottery`.",
                "x-http-method-lowercase":"get"
            },
            "put": {
                "requestBody": {
                    "description": "Updated `Lottery` information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Lottery"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful response."
                    }
                },
                "operationId": "updateLottery",
                "summary": "Update a Lottery",
                "description": "Updates an existing `Lottery`.",
                "x-http-method-lowercase":"put"
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Successful response."
                    }
                },
                "operationId": "deleteLottery",
                "summary": "Delete a Lottery",
                "description": "Deletes an existing `Lottery`.",
                "x-data-type-delete": "Lottery",
                "x-http-method-lowercase":"delete"
            },
            "parameters": [
                {
                    "name": "lotteryId",
                    "description": "A unique identifier for a `Lottery`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/gifts": {
            "summary": "Path used to manage the list of gifts.",
            "description": "The REST endpoint/path used to list and create zero or more `Gift` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Gift"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `Gift` entities."
                    }
                },
                "operationId": "getGifts",
                "summary": "List All Gifts",
                "description": "Gets a list of all `Gift` entities.",
                "x-http-method-lowercase":"get"
            },
            "post": {
                "requestBody": {
                    "description": "A new `Gift` to be created.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Gift"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful response."
                    }
                },
                "operationId": "createGift",
                "summary": "Create a Gift",
                "description": "Creates a new instance of a `Gift`.",
                "x-http-method-lowercase":"post"
            }
        },
        "/gifts/{giftId}": {
            "summary": "Path used to manage a single Gift.",
            "description": "The REST endpoint/path used to get, update, and delete single instances of an `Gift`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gift"
                                }
                            }
                        },
                        "description": "Successful response - returns a single `Gift`."
                    }
                },
                "operationId": "getGift",
                "summary": "Get a Gift",
                "description": "Gets the details of a single instance of a `Gift`.",
                "x-http-method-lowercase":"get"
            },
            "put": {
                "requestBody": {
                    "description": "Updated `Gift` information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Gift"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful response."
                    }
                },
                "operationId": "updateGift",
                "summary": "Update a Gift",
                "description": "Updates an existing `Gift`.",
                "x-http-method-lowercase":"put"
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Successful response."
                    }
                },
                "operationId": "deleteGift",
                "summary": "Delete a Gift",
                "description": "Deletes an existing `Gift`.",
                "x-http-method-lowercase":"delete"
            },
            "parameters": [
                {
                    "name": "giftId",
                    "description": "A unique identifier for a `Gift`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "User": {
                "description": "",
                "required": [
                    "id",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "",
                        "type": "string",
                        "readOnly": true,
                        "x-is-id": true
                    },
                    "username":{
                        "type": "string"
                    }
                },
                "x-lowercase-plural-name":"users"
            },
            "Price": {
                "description": "",
                "required": [
                    "id",
                    "value",
                    "currency",
                    "locale"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "",
                        "type": "string",
                        "readOnly": true,
                        "x-is-id": true
                    },
                    "value": {
                        "format": "double",
                        "description": "",
                        "type": "number"
                    },
                    "displayValue": {
                        "description": "",
                        "type": "string"
                    },
                    "currency": {
                        "description": "",
                        "type": "string"
                    },
                    "locale": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "Gift": {
                "description": "",
                "required": [
                    "id",
                    "name",
                    "prices",
                    "created"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "",
                        "type": "string",
                        "readOnly": true,
                        "x-is-id": true
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "description": "",
                        "type": "string",
                        "readOnly": true,
                        "x-created": true
                    },
                    "lastUpdated": {
                        "format": "date-time",
                        "description": "",
                        "type": "string",
                        "readOnly": true,
                        "x-lastUpdated": true
                    },
                    "prices": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Price"
                        },
                        "maximum": 50,
                        "minimum": 1,
                        "x-relation-many-to-many": true
                    }
                }
            },
            "status": {
                "description": "",
                "enum": [
                    "OPEN",
                    "CLOSED",
                    "SETTLED"
                ],
                "type": "string"
            },
            "Lottery": {
                "required": [
                    "id",
                    "name",
                    "gifts",
                    "participants",
                    "number-of-participants"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "uuid",
                        "description": "",
                        "type": "string",
                        "readOnly": true,
                        "x-is-id": true
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "description": "",
                        "type": "string",
                        "readOnly": true
                    },
                    "autoplay": {
                        "type": "boolean"
                    },
                    "number-of-participants": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "gifts": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Gift"
                        },
                        "x-relation-many-to-many": true
                    },
                    "participants": {
                        "description": "The users that participate in the lottery",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        },
                        "x-relation-many-to-many": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/status",
                        "description": "",
                        "readOnly": true
                    }
                }
            }
        }
    }
}
